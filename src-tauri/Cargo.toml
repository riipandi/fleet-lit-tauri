[package]
name = "fleet-lit"
version = "0.0.0"
description = "Experimental Fleet / Trae UI built with Tauri and Lit web components."
authors = ["Aris Ripandi <aris@duck.com>"]
repository = "https://github.com/riipandi/fleet-lit-tauri"
license = "MIT or Apache-2.0"
rust-version = "1.80"
edition = "2021"
publish = false

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
# The `_lib` suffix may seem redundant but it is necessary
# to make the lib name unique and wouldn't conflict with the bin name.
# This seems to be only an issue on Windows, see https://github.com/rust-lang/cargo/issues/8519
name = "fleet_lit_lib"
crate-type = ["staticlib", "cdylib", "rlib"]

[build-dependencies]
dotenv-build = "0.1.1"
tauri-build = { version = "2.2.0", features = [] }

[dependencies]
# Tauri dependencies
tauri = { version = "2.5.1", features = ["macos-private-api", "tray-icon", "devtools"] }
tauri-plugin-dialog = "2.2.1"
tauri-plugin-http = "2.4.3"
tauri-plugin-log = "2.4.0"
tauri-plugin-notification = "2.2.2"
tauri-plugin-opener = "2.2.6"
tauri-plugin-os = "2.2.1"
tauri-plugin-positioner = { version = "2.2.0", features = ["tray-icon"] }
tauri-plugin-process = "2.2.1"
tauri-plugin-shell = "2.2.1"

# Essential crates
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.140"

# Used to call the macOS native API
[target."cfg(target_os = \"macos\")".dependencies]
cocoa = "0.26.0"

[target.'cfg(not(any(target_os = "android", target_os = "ios")))'.dependencies]
tauri-plugin-updater = "2.7.1"

[dev-dependencies]
tauri = { version = "2.5.1", features = ["test"] }

# Optimized for bundle size. If you want faster builds comment out/delete this section.
# Reference: https://doc.rust-lang.org/cargo/reference/profiles.html
# Reference: https://tauri.app/concept/size/
[profile.release]
codegen-units = 128  # Allows LLVM to perform better optimization, reduce number of codegen units to increase optimizations.
lto = true           # Enables link-time-optimizations. LTO can produce better optimized code, at the cost of longer linking time.
opt-level = 1        # Use slightly better optimizations. Use "s" if you prefer smaller binaries.
panic = "abort"      # Higher performance by disabling panic handlers.
debug = false        # Disable debug on production build.
strip = true         # Ensures debug symbols are removed.

[profile.dev]
incremental = true   # Compile your binary in smaller steps.
debug = "limited"    # Debug info without type or variable-level information.
